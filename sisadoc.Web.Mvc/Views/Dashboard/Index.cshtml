@model List<sisadoc.Domain.ProcedureClass.CountActividadSp>
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutPrincipal.cshtml";
}
<div class="dash-mardis">
    @*<link href="~/Content/dashboard/dist/css/AdminLTE.min.css" rel="stylesheet" />*@
    <link rel="stylesheet" href="~/Content/dashboard/bower_components/bootstrap-datepicker/dist/css/bootstrap-datepicker.min.css">
    <link rel="stylesheet" href="~/Content/dashboard/bower_components/bootstrap-daterangepicker/daterangepicker.css">
    <div class="col-md-12 " style="right: 18px;">
        <div class="box">


            <div class="box-header with-border">
                <h3 class="box-title"><strong>Ranking de Actividades </strong> </h3>

                <div class="box-tools pull-right">
                    @*<button type="button" class="btn btn-box-tool" data-widget="collapse">
                            <i class="fa fa-minus"></i>
                        </button>

                        <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>*@

                    <div class="pull-right box-tools">
                        <button type="button" class="btn btn-primary btn-sm daterange pull-right" data-toggle="tooltip"
                                title="Date range">
                            <i class="fa fa-calendar"></i>
                        </button>
                        <button type="button" class="btn btn-primary btn-sm pull-right" data-widget="collapse"
                                data-toggle="tooltip" title="Collapse" style="margin-right: 5px;">
                            <i class="fa fa-minus"></i>
                        </button>
                    </div>
                </div>
            </div>
            <!-- /.box-header -->
            <div class="box-body" style="">
                <div class="row">
                    <div class="col-md-9">
                        <div id="inputN">
                            <div id="inputatcontentN">
                                <p class="text-center">
                                    <strong>Novedades: 2018/01/01 - 2018/12/31 </strong>

                                </p>
                            </div>
                        </div>
                            <div class="chart">
                                <!-- Sales Chart Canvas -->
                                <canvas id="salesChart" style="height: 180px; width: 848px;" width="856" height="181"></canvas>
                            </div>
                            <!-- /.chart-responsive -->
                        </div>
                        <!-- /.col -->
                        <div class="col-md-3">
                            <div id="donut-chart" style="height: 300px;"></div>
                        </div>
                    </div>
                <!-- /.row -->
            </div>
            <!-- ./box-body -->

            <div class="box-footer" style="">
                <div class="row">
                    @foreach (var cm in @Model)
                    {
                        if (@cm.Name == "Enviadas")
                        {
                            <div class="col-sm-4 col-xs-6">
                                <div class="small-box bg-aqua">
                                    <div class="inner">
                                        <div id="inputE"><div id="inputatcontentE"><h3>@cm.Number</h3></div></div>

                                        <p>Actividades</p>
                                    </div>
                                    <div class="icon">
                                        <i class="ion-android-folder-open"></i>
                                    </div>
                                    <a href="javascript:IdGet(-2)" class="small-box-footer">Información <i class="fa fa-arrow-circle-right"></i></a>
                                </div>
                                <!-- /.description-block -->
                            </div>
                        }
                        <!-- /.col -->
                        if (@cm.Name == "Pendientes")
                        {
                            <div class="col-sm-4 col-xs-6">
                                <div class="small-box bg-red">
                                    <div class="inner">
                                        <div id="inputP"><div id="inputatcontentP"><h3>@cm.Number</h3></div></div>

                                        <p>Pendientes</p>
                                    </div>
                                    <div class="icon">
                                        <i class="ion-help"></i>
                                    </div>
                                    <a href="javascript:IdGet(1)" class="small-box-footer">Información <i class="fa fa-arrow-circle-right"></i></a>
                                </div>

                            </div>
                        }
                        <!-- /.col -->
                        if (@cm.Name == "Atendidas")
                        {
                            <div class="col-sm-4 col-xs-6">
                                <div class="small-box bg-green">
                                    <div class="inner">
                                        <div id="inputAt"><div id="inputatcontent"><h3>@cm.Number</h3></div></div>

                                        <p>Atendidas</p>
                                    </div>
                                    <div class="icon">
                                        <i class="ion-android-checkbox-outline"></i>
                                    </div>
                                    <a href="javascript:IdGet(3)" class="small-box-footer">Información <i class="fa fa-arrow-circle-right"></i></a>
                                </div>
                                <!-- /.description-block -->
                            </div>
                        }
                        <!-- /.col -->
                    }
                </div>
                <!-- /.row -->
            </div>

            <!-- /.box-footer -->
        </div>
        <!-- /.box -->
        <div class="box">
            <div class="box-header">


                <div id="DatosTabla_d" class="col-xs-12 col-sm-12    col-lg-12">
                    <div class="table-responsive">
                        <table id="datosdashboard" class="table table-striped table-bordered table-hover dataTable no-footer small" role="grid">
                            <caption class="text-left"><b> Tabla de Novedades</b></caption>
                            <thead>
                                <tr>
                                    <th>Codigo</th>
                                    <th>Cliente</th>
                                    <th class=" hidden-xs visible-md-block">Celular</th>
                                    <th class=" hidden-xs visible-md-block">Fecha</th>
                                    <th class=" hidden-xs visible-md-block">Observación</th>
                                    <th class=" hidden-xs visible-md-block">Tipo</th>
                                    <th class=" hidden-xs visible-md-block">Estado</th>

                                </tr>
                            </thead>
                            <tbody class="searchable"></tbody>

                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<input type="text" value="-2" id="Inte" hidden />
<div class="modal fade" id="myModal" role="dialog">
    @{Html.RenderAction("_DespliegueNovedad", "Coordinador");}
</div>
@section scripts{
    <script src="~/Content/dashboard/bower_components/datatables.net/js/jquery.dataTables.min.js"></script>

    @*<script src="@Url.Content("~/Scripts/moment.min.js")"></script>*@

    <!-- DATA TABLES SCRIPT -->
    <script src="~/Content/dashboard/dist/js/adminlte.min.js"></script>

    <script src="~/Content/dashboard/dist/js/pages/dashboard2.js"></script>
    <script src="~/Content/dashboard/dist/js/demo.js"></script>
    <script src="~/Content/dashboard/bower_components/Flot/jquery.flot.js"></script>


    <!-- FLOT RESIZE PLUGIN - allows the chart to redraw when the window is resized -->
    <script src="~/Content/dashboard/bower_components/Flot/jquery.flot.resize.js"></script>
    <!-- FLOT PIE PLUGIN - also used to draw donut charts -->
    <script src="~/Content/dashboard/bower_components/Flot/jquery.flot.pie.js"></script>
    <!-- FLOT CATEGORIES PLUGIN - Used to draw bar charts -->
    <script src="~/Content/dashboard/bower_components/Flot/jquery.flot.categories.js"></script>


    <script src="@Url.Content("~/Scripts/jquery.dataTables.min.js")"></script>
    <script src="@Url.Content("~/Scripts/dataTables.bootstrap.min.js")"></script>

    <!-- daterangepicker -->
    <script src="~/Content/dashboard/bower_components/moment/min/moment.min.js"></script>
    <script src="~/Content/dashboard/bower_components/bootstrap-daterangepicker/daterangepicker.js"></script>
    <!-- datepicker -->
    <script src="~/Content/dashboard/bower_components/bootstrap-datepicker/dist/js/bootstrap-datepicker.min.js"></script>
}
@section viewDidLoad
{
    <script type="text/javascript">

        var range = '2018/01/01 00:00:00' + '&' + '2019/01/01 00:00:00'
        $('.daterange').daterangepicker({
            ranges: {
                'Hoy': [moment(), moment()],
                'Ayer': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],
                'Ultimos 7 dias': [moment().subtract(6, 'days'), moment()],
                'Ultimos 30 dias': [moment().subtract(29, 'days'), moment()],
                'Este Mes': [moment().startOf('month'), moment().endOf('month')],
                'Este año': [moment().startOf('year'), moment().endOf('year')]
            },
            startDate: moment().subtract(29, 'days'),
            endDate: moment()
        }, function (start, end) {
            $('#inputatcontentN').remove();
            $('#inputN').append("<div id='inputatcontentN'> <p class='text-center'> <strong>  Novedades: " + start.format('YYYY/MM/DD ') + ' - ' + end.format('YYYY/MM/DD ') + "</strong> </p><div>");

            range = start.format('YYYY/MM/DD HH:mm:ss') + '&' + end.format('YYYY/MM/DD HH:mm:ss')
                
                

                           
            clearCanvas()
            ranking()
            generarPor()
            charfn()
            spanNumber()
        });

        var table

        ranking()
        charfn()
        generarDashBoard();
        function generarPor() {

            var table = $('#datosdashboard').DataTable();
            table.ajax.reload();

        }
        function IdGet(id) {
            $('#Inte').val(id)
            generarPor()

        }
            function generarDashBoard() {


                table = $('#datosdashboard').dataTable({
                    "language": {
                        "url": "@Url.Content("~/Scripts/Spanish.json")"
                    }
                    ,

                    "ajax": {
                        "url": "@Url.Action("DtTablaDatoDashboard", "Dashboard")",
                        "type": "POST",
                        "data": function (d) {
                            return $.extend({}, d, {
                                "id": $('#Inte').val(),
                                "range": range
                            });
                        },
                        "dataSrc": function (json) {

                            for (var i = 0, ien = json.length; i < ien; i++) {

                                json[i].RespaldoDigital = "<a href='@Url.Action("DescargarArchCoordinador", "Coordinador")?Idact=" + json[i].IdC + "&UsuC=" + json[i].CodigoPersona + " ' class='glyphicon glyphicon-download'>";
                                json[i].CodigoCliente = "<a href='javascript:ShowNovedad(" + json[i].Id + ")' class='glyphicon glyphicon-info-sign'>";
                            }

                            return json;
                        }
                    },
                    "columns": [
                        { "data": "Id" },

                        { "data": "NombreCompleto" },
                        { "data": "Phone" },
                        { "data": "FechaInicio" },
                        { "data": "DescripcionActividad" },
                        { "data": "TipoActividad" },
                        { "data": "estado" },
                        { "data": "RespaldoDigital" },
                        { "data": "CodigoCliente" }
                    ]


                    });

                  generarPor()

        }
            function charfn() {
                            var donutData = ChartCircule()
                                     $.plot('#donut-chart', donutData, {
                                    series: {
                                        pie: {
                                            show: true,
                                            radius: 1,
                                            innerRadius: 0.5,
                                            label: {
                                                show: true,
                                                radius: 2 / 3,
                                                formatter: labelFormatter,
                                                threshold: 0.1
                                            }

                                        }
                                    },
                                    legend: {
                                        show: false
                                    }
                            })
            }
            function labelFormatter(label, series) {
                return '<div style="font-size:13px; text-align:center; padding:2px; color: #fff; font-weight: 600;">'
                    + label
                    + '<br>'
                    + Math.round(series.percent) + '%</div>'
            }
            function ChartCircule() {


                var autx ;


                 $.ajax({
                    type: "POST",
                    url:"@Url.Action("GetChart", "Dashboard")",
                    data: {
                        Id: 1,
                        range: range
                    },
                    success: function (data) {
                        autx = data



                    },
                    async: false,
                    cache: false,
                    error: function () { }
                   });
               return autx;
            }

            function Month(id) {

                var m
                switch (id) {
                    case 1:
                        m='Enero'
                        break;
                    case 2:
                        m = 'Febrero'
                        break;
                    case 3:
                        m = 'Marzo'
                        break;
                    case 4:
                        m = 'Abril'
                        break;
                    case 5:
                        m = 'Mayo'
                        break;
                    case 6:
                        m = 'Junio'
                        break;
                    case 7:
                        m = 'Julio'
                        break;
                    case 8:
                        m = 'Agosto'
                        break;
                    case 9:
                        m = 'Septiembre'
                        break;
                    case 10:
                        m = 'Octubre'
                        break;
                    case 11:
                        m = 'Noviembre'
                        break;
                    case 12:
                        m = 'Diciembre'
                        break;
                    default:
                        m = 'NA'
                }

                return m
            }
            function Drawcharts() {


                var autx = [];

                var count = 0;
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("GetCharYear", "Dashboard")",
                    data: {
                        Id: 1,
                        range: range
                    },
                    success: function (data) {

                        $.each(data, function (index, value) {

                            if(data[index].TIPO == -2){

                                autx[index] = data[index].Number
                                count = count + 1;
                            }
                        });

                        console.log(autx);
                    },
                    async: false,
                    cache: false,
                    error: function () { }
                });
                return autx;
            }
             function DrawchartsM() {



                var autM = [];
                var count = 0;
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("GetCharYear", "Dashboard")",
                    data: {
                        Id: 1,
                        range: range
                    },
                    success: function (data) {

                        $.each(data, function (index, value) {

                            if(data[index].TIPO == -2){
                                autM[count]=  Month(data[index].Months)

                                count = count + 1;
                            }
                        });

                        console.log(autx);
                    },
                    async: false,
                    cache: false,
                    error: function () { }
                });
                return autM;
            }
            function Drawcharts2() {


                var autx = [];
                var count = 0;

                $.ajax({
                    type: "POST",
                    url: "@Url.Action("GetCharYear", "Dashboard")",
                    data: {
                        Id: 1,
                        range: range
                    },
                    success: function (data) {

                        $.each(data, function (index, value) {
                            if(data[index].TIPO == 1)
                            {

                                autx[count] = data[index].Number
                                count = count + 1;
                            }
                        });

                        console.log(autx);
                    },
                    async: false,
                    cache: false,
                    error: function () { }
                });
                return autx;
            }

        function ShowNovedad(idCliente) {

            $('#EliminarActividad').show();
            $('#EditarActividad').show();
            $('#GuardarActividad').hide();


            $.ajax({
                type: "POST",
                url: "@Url.Action("RecuperarNovedad", "Docente")",
                data: {
                    IdactE: idCliente
                },
            success: function (actividad) {
                if (actividad.length > 0) {
                    var newDate = FORMATjSONDATE(actividad[0].FechaFin);

                    ClearModal()

                    $("#eventTitle").val(actividad[0].DescripcionActividad.toString())
                    $("#evenIni").val(FormatoDate(FORMATjSONDATE(actividad[0].FechaInicio)).toString())
                    //$("#evenFin").val(FormatoDate(FORMATjSONDATE(actividad[0].FechaFin)).toString())
                    $('#idlink').attr('src', 'data:image/png;base64,' + actividad[0].link.toString());
                    $("#autocomplete-ajax").val(actividad[0].ClienteNombre.toString())
                    $("#idCliente").val(actividad[0].idCliente.toString())
                    $("#idcod").val(actividad[0].Id.toString())
                    $("#Celular").val(actividad[0].Phone.toString())
                    $("#selecac").val(actividad[0].TipoActividad)
                    var tel = "tel:" + actividad[0].Phone.toString()
                    $("#idllamar").attr('href', tel);
                    $('#myModal').modal({
                        show: 'true'
                    });

                    return
                } {
                    bootbox.alert("No existe la actividad ")

                }
            },
            async: false,
            cache: false,
            error: function () { }

        });


            }

        function FORMATjSONDATE(JSONDATE) {
            var MyDate_String_Value = JSONDATE
            var value = new Date
                (
                parseInt(MyDate_String_Value.replace(/(^.*\()|([+-].*$)/g, ''))
                );
            var dat = value.getMonth() +
                1 +
                "/" +
                value.getDate() +
                "/" +
                value.getFullYear();

            return value

        }
        function FormatoDate(idFECHA) {
            FECHAFORMAT = moment(idFECHA).format('YYYY/MM/DD HH:mm:ss ')
            return FECHAFORMAT

        }
        function ClearModal() {

            $("#eventTitle").val("");
            $("#autocomplete-ajax").val("");
            urlArchivo = "";


            //$('#eventDateTime').val("");
            //$('#eventDuration').val("");
        }

        function ranking() {
            // Get context with jQuery - using jQuery's .get() method.
            var salesChartCanvas = $('#salesChart').get(0).getContext('2d');
            // This will get the first returned node in the jQuery collection.
            var salesChart = new Chart(salesChartCanvas);

            var salesChartData = {
                labels: DrawchartsM(),
                datasets: [



                    {
                        label: 'Electronics',
                        fillColor: 'rgb(210, 214, 222)',
                        strokeColor: 'rgb(210, 214, 222)',
                        pointColor: 'rgb(210, 214, 222)',
                        pointStrokeColor: '#c1c7d1',
                        pointHighlightFill: '#fff',
                        pointHighlightStroke: 'rgb(220,220,220)',
                        data: Drawcharts()
                    },
                    {
                        label: 'Electronics',
                        fillColor: '#c51803b8',
                        strokeColor: '#c51803b8',
                        pointColor: '#c51803b8',
                        pointStrokeColor: '#c1c7d1',
                        pointHighlightFill: '#fff',
                        pointHighlightStroke: 'rgb(220,220,220)',
                        data: Drawcharts2()
                    }

                ]
            };

            var salesChartOptions = {
                // Boolean - If we should show the scale at all
                showScale: true,
                // Boolean - Whether grid lines are shown across the chart
                scaleShowGridLines: false,
                // String - Colour of the grid lines
                scaleGridLineColor: 'rgba(0,0,0,.05)',
                // Number - Width of the grid lines
                scaleGridLineWidth: 1,
                // Boolean - Whether to show horizontal lines (except X axis)
                scaleShowHorizontalLines: true,
                // Boolean - Whether to show vertical lines (except Y axis)
                scaleShowVerticalLines: true,
                // Boolean - Whether the line is curved between points
                bezierCurve: true,
                // Number - Tension of the bezier curve between points
                bezierCurveTension: 0.3,
                // Boolean - Whether to show a dot for each point
                pointDot: false,
                // Number - Radius of each point dot in pixels
                pointDotRadius: 4,
                // Number - Pixel width of point dot stroke
                pointDotStrokeWidth: 1,
                // Number - amount extra to add to the radius to cater for hit detection outside the drawn point
                pointHitDetectionRadius: 20,
                // Boolean - Whether to show a stroke for datasets
                datasetStroke: true,
                // Number - Pixel width of dataset stroke
                datasetStrokeWidth: 2,
                // Boolean - Whether to fill the dataset with a color
                datasetFill: true,
                // String - A legend template
                legendTemplate: '<ul class=\'<%=name.toLowerCase()%>-legend\'><% for (var i=0; i<datasets.length; i++){%><li><span style=\'background-color:<%=datasets[i].lineColor%>\'></span><%=datasets[i].label%></li><%}%></ul>',
                // Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container
                maintainAspectRatio: true,
                // Boolean - whether to make the chart responsive to window resizing
                responsive: true
            };

            // Create the line chart
            salesChart.Line(salesChartData, salesChartOptions);
        }

        function clearCanvas() {
            $('#salesChart').remove();
            $('.chart').append('<canvas id="salesChart" style="height: 180px;"></canvas>');
        }

        function spanNumber() {
                   $.ajax({
                    type: "POST",
                    url: "@Url.Action("GetSpanNumber", "Dashboard")",
                    data: {
                        Id: 1,
                        range: range
                    },
                    success: function (data) {

                        $.each(data, function (index, value) {

                            if (data[index].Name == 'Atendidas'){
                                $('#inputatcontent').remove();
                                $('#inputAt').append("<div id='inputatcontent'><h3>" + data[index].Number + "</h3><div>");
                            }
                            if (data[index].Name == 'Enviadas') {
                                $('#inputatcontentE').remove();
                                $('#inputE').append("<div id='inputatcontentE'><h3>" + data[index].Number + "</h3><div>");
                            }
                            if (data[index].Name == 'Pendientes') {
                                $('#inputatcontentP').remove();
                                $('#inputP').append("<div id='inputatcontentP'><h3>" + data[index].Number + "</h3><div>");
                            }
                        });

                        console.log(autx);
                    },
                    async: false,
                    cache: false,
                    error: function () { }
                });
       



        }
    </script>
}